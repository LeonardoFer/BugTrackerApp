@page "/issues/create"
@inject HttpClient _httpClient
@inject IJSRuntime _jsRuntime

<MudContainer Class="pa-8">
    <MudItem xs="12">
        <MudPaper Square="true" Elevation="3" Class="pa-4">
            <MudForm>
                <MudTextField @bind-Value="issueDto!.Title" T="string" Label="Title" Clearable="true" HelperText="Maximum 128 characters." />
                <MudTextField @bind-Value="issueDto!.Description" T="string" Label="Description" Clearable="true" Lines="7" HelperText="Please describe the Bug or Issue in details, including steps to reproduce it if possible. Maximum 2000 characters." />
                <MudGrid Class="d-flex justify-center pa-4">
                    <MudPaper Elevation="0">
                        <MudButton Class="mt-2" OnClick="SendRequest" Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Material.Filled.Send">Send Bug report</MudButton>
                    </MudPaper>
                </MudGrid>
            </MudForm>
        </MudPaper>
    </MudItem>

    <MudItem Class="pt-4" Style="@($"visibility:{(@_alertHidden? "hidden" : "visible")}")">
        <MudAlert Severity="@_alertSeverity" Variant="Variant.Filled" Square="true" Elevation="3" ShowCloseIcon="true" CloseIconClicked="OnCloseButton">
            @_alertText
        </MudAlert>
    </MudItem>
</MudContainer>

<!-- Variables -->
@code
{
    private IssueDto? issueDto;

    private Severity _alertSeverity;
    private bool _alertHidden = true;
    private string? _alertText;
}
<!-- OnInitialized -->
@code
{
    protected override void OnInitialized()
    {
        _alertHidden = true;
        if (issueDto == null)
        {
            issueDto = new IssueDto();
        }
    }
}
<!-- Custom Methods -->
@code
{
    public async Task SendRequest()
    {
        if (issueDto != null)
        {
            var response = await _httpClient.PostAsJsonAsync($"{_httpClient.BaseAddress}issues", issueDto);

            if (response.StatusCode == HttpStatusCode.OK)
            {
                _alertHidden = false;
                _alertSeverity = Severity.Success;
                _alertText = $"Success! A new entry was added to the DataBase.";
            }
            else if (response.StatusCode == HttpStatusCode.BadRequest)
            {
                _alertHidden = false;
                _alertSeverity = Severity.Error;
                _alertText = $"Error! Incorrect data. Please verify the given information.";
            }
            else
            {
                _alertHidden = false;
                _alertSeverity = Severity.Warning;
                _alertText = $"Error {response.StatusCode}! Something went wrong...";
            }
        }
    }
}
@code
{
    public void OnCloseButton()
    {
        _alertHidden = true;
    }
}