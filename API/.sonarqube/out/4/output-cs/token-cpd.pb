Ï
GE:\dev\BugTrackerApp\Data\Migrations\20220201215038_InitialMigration.cs
	namespace 	
Data
 
. 

Migrations 
{ 
public 

partial 
class 
InitialMigration )
:* +
	Migration, 5
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ :
,: ;
true< @
)@ A
,A B
Title 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= C
,C D
nullableE M
:M N
falseO T
)T U
,U V
IsFixed 
= 
table #
.# $
Column$ *
<* +
bool+ /
>/ 0
(0 1
type1 5
:5 6
$str7 @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
	IsDeleted 
= 
table  %
.% &
Column& ,
<, -
bool- 1
>1 2
(2 3
type3 7
:7 8
$str9 B
,B C
nullableD L
:L M
falseN S
)S T
,T U
CreationDate  
=! "
table# (
.( )
Column) /
</ 0
DateTime0 8
>8 9
(9 :
type: >
:> ?
$str@ F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
ModifiedDate  
=! "
table# (
.( )
Column) /
</ 0
DateTime0 8
>8 9
(9 :
type: >
:> ?
$str@ F
,F G
nullableH P
:P Q
falseR W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 0
,0 1
x2 3
=>4 6
x7 8
.8 9
Id9 ;
); <
;< =
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
migrationBuilder!! 
.!! 
	DropTable!! &
(!!& '
name"" 
:"" 
$str"" 
)"" 
;""  
}## 	
}$$ 
}%% Ý
FE:\dev\BugTrackerApp\Data\Migrations\20220204004641_SecondMigration.cs
	namespace 	
Data
 
. 

Migrations 
{ 
public 

partial 
class 
SecondMigration (
:) *
	Migration+ 4
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} Ô
=E:\dev\BugTrackerApp\Data\src\Interfaces\IIssuesRepository.cs
	namespace 	
Data
 
. 
src 
. 

Interfaces 
{ 
public 

	interface 
IIssuesRepository &
{ 
public 
Task 
< 
Issue 
> 
CreateAsync &
(& '
Issue' ,
issue- 2
)2 3
;3 4
public 
Task 
< 
IEnumerable 
<  
Issue  %
>% &
>& '
GetPaginated( 4
(4 5
int5 8
skip9 =
=> ?
$num@ A
,A B
intC F
takeG K
=L M
$numN P
)P Q
;Q R
public		 
Task		 
<		 
int		 
>		 
GetIssuesCount		 '
(		' (
)		( )
;		) *
public

 
Task

 
<

 
Issue

 
?

 
>

 
GetByIdAsync

 (
(

( )
int

) ,
id

- /
)

/ 0
;

0 1
public 
Task 
< 
Issue 
? 
> 
UpdateAsync '
(' (
int( +
id, .
,. /
Issue0 5
issue6 ;
); <
;< =
public 
void 
Delete 
( 
int 
id !
)! "
;" #
} 
} ž/
<E:\dev\BugTrackerApp\Data\src\Repository\IssuesRepository.cs
	namespace 	
Data
 
. 
src 
. 

Repository 
{ 
public 

class 
IssuesRepository !
:" #
IIssuesRepository$ 5
{ 
private		 
readonly		 
SqliteDbContext		 (

_dbContext		) 3
;		3 4
public

 
IssuesRepository

 
(

  
SqliteDbContext

  /
	dbContext

0 9
)

9 :
{ 	

_dbContext 
= 
	dbContext "
;" #
} 	
public 
async 
Task 
< 
Issue 
>  
CreateAsync! ,
(, -
Issue- 2
issue3 8
)8 9
{ 	
await 

_dbContext 
. 
Issues #
!# $
.$ %
AddAsync% -
(- .
issue. 3
)3 4
;4 5
await 

_dbContext 
. 
SaveChangesAsync -
(- .
). /
;/ 0
return 
issue 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Issue& +
>+ ,
>, -
GetPaginated. :
(: ;
int; >
skip? C
=D E
$numF G
,G H
intI L
takeM Q
=R S
$numT V
)V W
{ 	
return   
await   

_dbContext   #
.  # $
Issues  $ *
!  * +
.  + ,
Where  , 1
(  1 2
issue  2 7
=>  8 :
!  ; <
issue  < A
.  A B
	IsDeleted  B K
)  K L
.  L M
Skip  M Q
(  Q R
skip  R V
)  V W
.  W X
Take  X \
(  \ ]
take  ] a
)  a b
.  b c
ToListAsync  c n
(  n o
)  o p
;  p q
}!! 	
public&& 
async&& 
Task&& 
<&& 
int&& 
>&& 
GetIssuesCount&& -
(&&- .
)&&. /
{'' 	
return(( 
await(( 

_dbContext(( #
.((# $
Issues(($ *
!((* +
.((+ ,
Where((, 1
(((1 2
issue((2 7
=>((8 :
!((; <
issue((< A
.((A B
	IsDeleted((B K
)((K L
.((L M

CountAsync((M W
(((W X
)((X Y
;((Y Z
})) 	
public// 
async// 
Task// 
<// 
Issue// 
?//  
>//  !
GetByIdAsync//" .
(//. /
int/// 2
id//3 5
)//5 6
{00 	
var11 
result11 
=11 
await11 

_dbContext11 )
.11) *
Issues11* 0
!110 1
.111 2
FirstOrDefaultAsync112 E
(11E F
x11F G
=>11H J
x11K L
.11L M
Id11M O
==11P R
id11S U
)11U V
;11V W
if22 
(22 
result22 
!=22 
null22 
)22 
{33 
return44 
result44 
;44 
}55 
return66 
null66 
;66 
}77 	
public>> 
async>> 
Task>> 
<>> 
Issue>> 
?>>  
>>>  !
UpdateAsync>>" -
(>>- .
int>>. 1
id>>2 4
,>>4 5
Issue>>6 ;
issue>>< A
)>>A B
{?? 	
Issue@@ 
?@@ 
issueFromDb@@ 
=@@  
await@@! &

_dbContext@@' 1
.@@1 2
Issues@@2 8
!@@8 9
.@@9 :
FirstOrDefaultAsync@@: M
(@@M N
issue@@N S
=>@@T V
issue@@W \
.@@\ ]
Id@@] _
==@@` b
id@@c e
)@@e f
;@@f g
ifBB 
(BB 
issueFromDbBB 
!=BB 
nullBB #
)BB# $
{CC 
issueFromDbDD 
.DD 
TitleDD !
=DD" #
issueDD$ )
.DD) *
TitleDD* /
;DD/ 0
issueFromDbEE 
.EE 
DescriptionEE '
=EE( )
issueEE* /
.EE/ 0
DescriptionEE0 ;
;EE; <
issueFromDbFF 
.FF 
IsFixedFF #
=FF$ %
issueFF& +
.FF+ ,
IsFixedFF, 3
;FF3 4
issueFromDbGG 
.GG 
ModifiedDateGG (
=GG) *
issueGG+ 0
.GG0 1
ModifiedDateGG1 =
;GG= >
awaitHH 

_dbContextHH  
.HH  !
SaveChangesAsyncHH! 1
(HH1 2
)HH2 3
;HH3 4
}II 
returnKK 
nullKK 
;KK 
}LL 	
publicQQ 
voidQQ 
DeleteQQ 
(QQ 
intQQ 
idQQ !
)QQ! "
{RR 	
IssueSS 
?SS 
issueSS 
=SS 

_dbContextSS %
.SS% &
IssuesSS& ,
!SS, -
.SS- .
FirstOrDefaultSS. <
(SS< =
issueSS= B
=>SSC E
issueSSF K
.SSK L
IdSSL N
==SSO Q
idSSR T
)SST U
;SSU V
ifTT 
(TT 
issueTT 
!=TT 
nullTT 
)TT 
{UU 
issueVV 
.VV 
	IsDeletedVV 
=VV  !
trueVV" &
;VV& '

_dbContextWW 
.WW 
SaveChangesWW &
(WW& '
)WW' (
;WW( )
}XX 
}YY 	
}ZZ 
}[[ å
6E:\dev\BugTrackerApp\Data\src\Services\ObjectMapper.cs
	namespace 	
Data
 
. 
src 
. 
Services 
{ 
public 

class 
ObjectMapper 
{ 
public 
ObjectMapper 
( 
) 
{		 	
}

 	
public 
Issue #
MapIssueDtoToIssueModel ,
(, -
IssueDto- 5
issueDto6 >
)> ?
{ 	
Issue 
mappedModel 
= 
new  #
Issue$ )
() *
)* +
{ 
Id 
= 
issueDto 
. 
Id  
,  !
Title 
= 
issueDto  
.  !
Title! &
,& '
Description 
= 
issueDto &
.& '
Description' 2
,2 3
IsFixed 
= 
issueDto "
." #
IsFixed# *
,* +
CreationDate 
= 
issueDto '
.' (
CreationDate( 4
,4 5
ModifiedDate 
= 
issueDto '
.' (
ModifiedDate( 4
} 
; 
return 
mappedModel 
; 
} 	
public 
IssueDto #
MapIssueModelToIssueDto /
(/ 0
Issue0 5

issueModel6 @
)@ A
{ 	
IssueDto 
	mappedDto 
=  
new! $
IssueDto% -
(- .
). /
{ 
Id 
= 

issueModel 
.  
Id  "
," #
Title   
=   

issueModel   "
.  " #
Title  # (
,  ( )
Description!! 
=!! 

issueModel!! (
.!!( )
Description!!) 4
,!!4 5
IsFixed"" 
="" 

issueModel"" $
.""$ %
IsFixed""% ,
,"", -
CreationDate## 
=## 

issueModel## )
.##) *
CreationDate##* 6
,##6 7
ModifiedDate$$ 
=$$ 

issueModel$$ )
.$$) *
ModifiedDate$$* 6
}%% 
;%% 
return'' 
	mappedDto'' 
;'' 
}(( 	
})) 
}** £
0E:\dev\BugTrackerApp\Data\src\SqliteDbContext.cs
	namespace 	
Data
 
. 
src 
{ 
public 

class 
SqliteDbContext  
:! "
	DbContext# ,
{ 
public		 
DbSet		 
<		 
Issue		 
>		 
?		 
Issues		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
SqliteDbContext

 
(

 
DbContextOptions

 /
<

/ 0
SqliteDbContext

0 ?
>

? @
options

A H
)

H I
:

J K
base

L P
(

P Q
options

Q X
)

X Y
{ 	
} 	
} 
} 